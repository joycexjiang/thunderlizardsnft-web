{"ast":null,"code":"var _jsxFileName = \"/Users/joycejiang/workspace/epic-nfts/buildspace-nft-course-starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport gallery from './assets/gallery.gif';\nimport React, { useEffect, useState } from \"react\"; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'dsgnbyjoyce';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n  _s();\n\n  /* state variable we use to store our user's public wallet after importing useState*/\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  /*making sure this is async*/\n\n  const checkIfWalletIsConnected = async () => {\n    /*making sure we have access to window.ethereum */\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n    /*\n    * Check if we're authorized to access the user's wallet\n    */\n\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    /*\n      * User can have multiple authorized accounts, we grab the first one if its there!\n      */\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n  /*implementing connectWallet method */\n\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask pls:)\");\n        return;\n      }\n      /*method to request access to account */\n\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      /*prints out public address once we authorize metamask */\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Render Methods\n\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  /*runsfunction when the page loads */\n\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"ThunderLizard NFT Collection: Outliers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"Each unique. Each beautiful. Discover your NFT today. [god change this]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"NFT Preview\",\n          className: \"image-prvw\",\n          src: gallery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["gallery","React","useEffect","useState","TWITTER_HANDLE","TWITTER_LINK","OPENSEA_LINK","TOTAL_MINT_COUNT","App","currentAccount","setCurrentAccount","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWallet","alert","error","renderNotConnectedContainer","twitterLogo"],"sources":["/Users/joycejiang/workspace/epic-nfts/buildspace-nft-course-starter/src/App.js"],"sourcesContent":["import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport gallery from './assets/gallery.gif';\nimport React, { useEffect, useState } from \"react\";\n\n// Constants\nconst TWITTER_HANDLE = 'dsgnbyjoyce';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n  \n  /* state variable we use to store our user's public wallet after importing useState*/\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  /*making sure this is async*/\n\n  const checkIfWalletIsConnected = async () => {\n    /*making sure we have access to window.ethereum */\n    const {ethereum}=window;\n  \n    if (!ethereum){\n      console.log(\"Make sure you have metamask!!\");\n      return;\n    }else{\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n      /*\n      * Check if we're authorized to access the user's wallet\n      */\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    /*\n      * User can have multiple authorized accounts, we grab the first one if its there!\n      */\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n      } else {\n        console.log(\"No authorized account found\");\n      }\n    }\n  \n\n  /*implementing connectWallet method */\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if(!ethereum){\n        alert(\"Get MetaMask pls:)\");\n        return;\n      }\n\n      /*method to request access to account */\n      const accounts = await ethereum.request({method:\"eth_requestAccounts\"});\n\n      /*prints out public address once we authorize metamask */\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error){\n        console.log(error);\n    }\n  }\n\n  // Render Methods\n  const renderNotConnectedContainer = () => (\n    <button className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  /*runsfunction when the page loads */\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">ThunderLizard NFT Collection: Outliers</p>\n          \n          <p className=\"sub-text\">\n            Each unique. Each beautiful. Discover your NFT today. [god change this]\n          </p>\n\n          <img alt=\"NFT Preview\" className=\"image-prvw\" src={gallery} />\n          \n          {renderNotConnectedContainer()}\n\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n         >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}